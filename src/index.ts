import { fromHono } from "chanfana";
import { Hono } from "hono";
import { Governance } from "./endpoints/governance";
import { Start } from "./endpoints/start";

// Start a Hono app
const app = new Hono();

// Setup OpenAPI registry
const openapi = fromHono(app, {
	docs_url: "/",
});

/**
 * @api {post} /v1/start Starting insulin infusion
 * @apiName PostStart
 * @apiGroup POST
 * @apiVersion 1.2.3
 *
 * @apiParam {Number} glucose Current blood glucose reading (mmol/L)
 *
 * @apiSuccess {String} rate Rate to set insulin (including units/hr).
 * @apiSuccess {Number} rateNum Rate as Number (Float)
 * @apiSuccess {Object} advice Advice
 * @apiSuccess {String} advice.type Type of advice
 * @apiSuccess {String[]} advice.text Line by line advice text
 * @apiSuccess {String} hex Governance hexcode
 */
openapi.post("/v1/start", Start);

/**
 * @api {post} /v1/check Governance hexcode check
 * @apiName PostCheck
 * @apiGroup POST
 * @apiVersion 1.2.3
 *
 * @apiParam {String} governance Governance hexcode generated by the saferinsulin.org algorithm
 *
 * @apiSuccess {String} function Calculator function called: 'a' (start) or 'b' (continue).
 * @apiSuccess {Number} current Current glucose parameter passed to function
 * @apiSuccess {Number} last Previous glucose parameter passed to function [b only]
 * @apiSuccess {Number} rate Rate parameter passed to function [b only]
 * @apiSuccess {String} date Date the function was invoked
 * @apiError InvalidGovernanceCode API was supplied a missing or invalid governance code which could not be processed
 */
openapi.post("/v1/check", Governance);

// Export the Hono app
export default app;
